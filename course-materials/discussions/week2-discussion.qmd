---
title: "Week 2: Discussion Section"
subtitle: "Working with multiple vector types"
author: "Alessandra Vidal Meza"
date: last-modified
execute: 
  eval: false
format:
  html:
    toc: true
editor_options: 
  chunk_output_type: console
---

## 1. Learning Objectives

- Use `sf::st_read()` to read multiple vector data types
- Retreive the CRS of a vector object with `sf::st_crs()`
- Transform CRS and match across all vector data types with `sf::st_transform()`
- Perform `dplyr` attribute manipulations (e.g. `filter()`, `mutate()`, `select()`)

::: {.callout-tip icon=true}
# More map making in R

There are MANY different ways to make maps in R, all with different pros/cons. Check out this [resource](course-materials/resources/plotting.qmd) for examples of what map making looks like in `ggplot2`, `leaflet`, and more!
:::

## 2. Get Started

- Create an `.Rproj` as your version controlled project for Week 2
- Create a Quarto document inside your `.Rproj`
- Download [this folder from Google Drive](https://drive.google.com/drive/folders/1KahW7CG--XicV9TFBNmmo40ReV9q8c19?usp=sharing) and move it inside your `.Rproj`
- Load all necessary packages

```{r}
#| message: false
#| warning: false

library(here)
library(tidyverse)
library(sf)
library(tmap)
```

## 3. Your Task

[This repository](https://github.com/EDS-223-Geospatial/eds223-week2) contains the following datasets:

- **Colombia's Terrestrial Ecosystems** ([The Nature Conservancy/NatureServe](https://databasin.org/datasets/e4ebf6df95094104a05c68b72a8b3e55/))
- **Colombia's Roads** ([Esri](https://databasin.org/datasets/d383d26773fe4524b5a69e957f2befd6/))
- **Bird Observations** ([DATAVES](https://doi.org/10.15472/iqnpse))


Now, to meet this week's learning objectives, your task:

1. Read in the data for Colombia's ecoregions, roads, and bird observations
  - Use `st_read()` to read vector data (e.g., .shp, .gdb)
  - Use `rename()` or `mutate()` to rename the columns `decimal_longitude` and `decimal_latitude` to `long` and `lat` in `aves` and `sf::st_as_sf()` to convert it into an sf object
    - **Hint**: To convert a table into a vector object, you can use `st_as_sf()` but remember to check the `class()` of an object first!
2. Check `class()` of all vector objects (including the converted `aves`) and use `sf::st_geometry_type()` to check the geometry type
3. Use `filter()` to select a macro region of interest from `N1_MacroBi` in Colombia's ecoregions dataset and save as a new vector data
  - Check `class()` of the new vector data
  - Plot the new vector data using `tmap`
4. Use `st_crs()` to retrieve CRS of all vector objects and assign a new CRS
  - **Bonus Challenge**: Check units of your object with `st_crs()$units`
  - Check CRS of all vector objects with `st_crs()`
  - `st_crs() <- NA` is a brute force way to remove a CRS, instead:
    - For the bird observations dataset, extract the longitude and latitude from the `geometry` column and use `sf::st_drop_geometry()`
    - Convert `long` and `lat` into a geometry again with `st_as_sf()` to obtain a proper `sf` data frame
5. Let's bring all vector data types together
  - Check that the CRS of the ecoregions and roads datasets match
  - Transform CRS of the bird observations data using `sf::st_transform()` to match with the other datasets
  - Use `tmap` to plot the ecoregions, roads, and bird observations together