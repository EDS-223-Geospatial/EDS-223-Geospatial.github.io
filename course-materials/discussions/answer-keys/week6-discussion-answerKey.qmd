---
title: "Week 6: Discussion Section - Answer Key"
subtitle: "Working with false color images"
author: "Alessandra Vidal Meza"
date: last-modified
execute: 
  eval: true
format:
  html:
    toc: true
---

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(sf)
library(terra)
library(tmap)
library(tmaptools)
```

```{r}
#| eval: false

# Set directory for folder
pre_fire_dir <- here::here("data", "landsat", "LC80340322016189-SC20170128091153", "crop")

# Create a list of all images that have the extension .tif and contain the word band
pre_fire_bands <- list.files(pre_fire_dir,
                             pattern = glob2rx("*band*.tif$"),
                             full.names = TRUE)
# Create a raster stack
pre_fire_rast <- rast(pre_fire_bands)
```

```{r}
#| eval: false

# Set directory for folder
post_fire_dir <- here::here("data", "landsat", "LC80340322016205-SC20170127160728", "crop")

# Create a list of all images that have the extension .tif and contain the word band
post_fire_bands <- list.files(post_fire_dir,
                             pattern = glob2rx("*band*.tif$"),
                             full.names = TRUE)
# Create a raster stack
post_fire_rast <- rast(post_fire_bands)
```

```{r}
#| echo: false

# Set directory for folder
pre_fire_dir <- here::here("course-materials", "data", "week6-discussion", "landsat", "LC80340322016189-SC20170128091153", "crop")

# Create a list of all images that have the extension .tif and contain the word band
pre_fire_bands <- list.files(pre_fire_dir,
                             pattern = glob2rx("*band*.tif$"),
                             full.names = TRUE)
# Create a raster stack
pre_fire_rast <- rast(pre_fire_bands)
```

```{r}
#| echo: false

# Set directory for folder
post_fire_dir <- here::here("course-materials", "data", "week6-discussion", "landsat", "LC80340322016205-SC20170127160728", "crop")

# Create a list of all images that have the extension .tif and contain the word band
post_fire_bands <- list.files(post_fire_dir,
                             pattern = glob2rx("*band*.tif$"),
                             full.names = TRUE)
# Create a raster stack
post_fire_rast <- rast(post_fire_bands)
```

```{r}
nbr_fun <- function(nir, swir2){
    (nir - swir2)/(nir + swir2)
}
```

## Rename Bands

```{r}
bands <- c("Aerosol", "Blue", "Green", "Red", "NIR", "SWIR1", "SWIR2")
names(pre_fire_rast) <- bands
names(post_fire_rast) <- bands
```

## Plot True Color Composite 

```{r}
plotRGB(pre_fire_rast, r = 4, g = 3, b = 2, stretch = "lin")
```

```{r}
plotRGB(post_fire_rast, r = 4, g = 3, b = 2, stretch = "lin")
```

## Plot False Color Composite

```{r}
plotRGB(pre_fire_rast, r = 7, g = 5, b = 3, stretch = "lin")
```

```{r}
plotRGB(post_fire_rast, r = 7, g = 5, b = 3, stretch = "lin")
```

## Calculate NBR and dNBR

```{r}
pre_nbr_rast <- terra::lapp(pre_fire_rast[[c(5, 7)]], fun = nbr_fun)

plot(pre_nbr_rast, main = "Cold Springs Pre-Fire NBR")
```

```{r}
post_nbr_rast <- terra::lapp(post_fire_rast[[c(5, 7)]], fun = nbr_fun)

plot(post_nbr_rast, main = "Cold Springs Post-Fire NBR")
```

## Calculate and Plot dNBR

```{r}
diff_nbr <- pre_nbr_rast - post_nbr_rast

tm_shape(diff_nbr) +
  tm_raster(style = "equal", n = 6, 
            palette = get_brewer_pal("YlOrRd", n = 6, plot = FALSE),
            title = "Difference NBR (dNBR)") +
  tm_layout(legend.outside = TRUE)
```

## Reclassification
```{r}
# Set categories for severity levels
categories <- c("Enhanced Regrowth", "Unburned", "Low Severity", "Moderate Severity", "High Severity")

# Create reclassification matrix
rcl <- matrix(c(-Inf, -0.1, 1, # group 1 ranges for Enhanced Regrowth
                -0.1, 0.1, 2, # group 2 ranges for Unburned
                0.1, 0.27, 3, # group 3 ranges for Low Severity
                0.27, 0.66, 4, # group 4 ranges for Moderity Severity
                0.66, Inf, 5), # group 5 ranges for High Severity
                ncol = 3, byrow = TRUE)

# Use reclassification matrix to reclassify dNBR raster
reclassified <- classify(diff_nbr, rcl = rcl)

# Change reclassified values into factors
values(reclassified) <- as.factor(values(reclassified))
```

```{r}
tm_shape(reclassified) +
  tm_raster(style = "cat",
            labels = categories,
            palette = get_brewer_pal("YlOrRd", n = 5, plot = FALSE),
            title = "Severity Level")+
  tm_layout(legend.outside = TRUE)
```

