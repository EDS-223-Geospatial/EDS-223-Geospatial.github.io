---
title: "Week 5: Discussion Section"
subtitle: "Practice with raster operations"
author: "Allie Caughmam"
date: last-modified
execute: 
  eval: false
format:
  html:
    toc: true
---

::: callout-tip
## Reference
Refer to [Chapter 6](https://r.geocompx.org/raster-vector) of *Geocomputation with R* to help get you started.
:::

## Learning Objectives

- Use `terra::crop()` and `terra::mask()` to create a subset of a raster or vector 
- Use `terra::aggregate()` and `terra::resample()` to create a new raster or vector
- Use `terra::as.polygons()` to convert a raster to a vector of polygons

## Get Started

Let's load the necessary packages:

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(sf)
library(terra)
library(spData)
library(spDataLarge)
library(tidyverse)
```

```{r}
zion_points <- read_sf(system.file("vector/zion_points.gpkg", package = "spDataLarge"))

srtm <- terra::rast(system.file("raster/srtm.tif", package = "spDataLarge"))

zion_convex_hull <- sf::st_combine(zion_points) %>%
  sf::st_convex_hull() %>% 
  st_as_sf()

grain <- terra::rast(system.file("raster/grain.tif", package = "spData"))
```

Now, to meet our learning objectives, your task:

1. Crop the `srtm` raster using (1) `zion_points` and (2) `zion_convex_hull`
  - Are there any differences in the output maps? 
  - Next, mask `srtm` using these two datasets. Can you see any difference now?
2. Subset points higher than 3100 meters in `nz_height` and create a template raster with a resolution of 3 km x 3 km for the extent of the subset dataset
  - Count numbers of the highest points in each grid cell
  - Find the maximum elevation in each grid cell
3. With the previous raster, complete the following:
  - Aggregate the raster counting high points in New Zealand/Aotearoa
  - Reduce its geographic resolution by half, such that cells are 6 x 6 km
  - Plot the result
  - Resample back to the original resolution of 3 km x 3 km
4. Polygonize `grain` and filter all squares representing clay

## Answer Key

### Crop and Mask `srtm`

```{r}
srtm_crop1 <- crop(srtm, zion_points)
srtm_crop2 <- crop(srtm, zion_convex_hull)
plot(srtm_crop1)
plot(srtm_crop2)

srtm_mask1 <- mask(srtm, zion_points)
srtm_mask2 <- mask(srtm, zion_convex_hull)
plot(srtm_mask1)
plot(srtm_mask2)
```

### Subset Points in New Zealand/Aotearoa

```{r}
nz_height3100 <- nz_height %>% 
  dplyr::filter(elevation > 3100)

nz_template <- rast(terra::ext(nz_height3100),
                    resolution = 3000, crs = terra::crs(nz_height3100))
```

### Count Points in Each Cell

```{r}
nz_raster <- rasterize(nz_height3100, nz_template, field = "elevation", fun = "length")
plot(nz_raster)
plot(st_geometry(nz_height3100), add = TRUE)
```

### Find Maximum Elevation in Each Grid Cell

```{r}
nz_raster2 <- rasterize(nz_height3100, nz_template, field = "elevation", fun = max)
plot(nz_raster2)
plot(st_geometry(nz_height3100), add = TRUE)
```

### Aggregate Raster

```{r}
nz_raster_low <- aggregate(nz_raster, fact = 2, fun = sum, na.rm = TRUE)

nz_resample <- resample(nz_raster_low, nz_raster)
plot(nz_raster_low)
plot(nz_resample) # the results are spread over a greater area and there are border issues
plot(nz_raster)
```

### Vectorize Raster

```{r}
grain_poly <- as.polygons(grain) %>% 
  st_as_sf()

plot(grain)
plot(grain_poly)

clay <- grain_poly %>% 
  dplyr::filter(grain == "clay")

plot(clay)
```

